version: 2
aliases:
  - &container_config
    working_directory: /app
    docker:
      - image: integratedexperts/circleci2-builder
        environment:
          COMPOSER_ALLOW_SUPERUSER: 1
          COMPOSE_PROJECT_NAME: govcms
          COMPOSE_FILE: docker-compose.yml:docker-compose.ci.yml
          SKIP_INSTALL_ON_HOST: 1
jobs:
  build:
    <<: *container_config
    parallelism: 1
    steps:
      - checkout
#      - setup_remote_docker
      - setup_remote_docker:
          docker_layer_caching: true
          version: 17.06.0-ce
      - run:
          name: Composer validate
          command: composer validate --ansi --strict
      - run:
          name: Pull newest Docker images
          command: ahoy docker-pull
      - run:
          name: Build project
          command: |
            echo "COMPOSE_FILE=$COMPOSE_FILE">>.env
            ahoy build
#      - run:
#          name: Lint code
#          command: ahoy lint
      - run:
          name: Run phpunit tests
          command: ahoy test-phpunit
      - run:
          name: Run behat tests
          command: |
            ahoy cli-run "mkdir -p /tmp/screenshots"
            [ "$CIRCLE_NODE_TOTAL" -gt "1" ] && BEHAT_PROFILE=--profile=p$CIRCLE_NODE_INDEX && echo "BEHAT_PROFILE=$BEHAT_PROFILE">>.env.local
            ahoy test-behat -- --format=progress_fail || ahoy test-behat -- --format=progress_fail --rerun || true
      - run:
          name: Copy artifacts
          command: |
            mkdir -p /tmp/artifacts/behat
            ahoy cli-run "[ -d /app/tests/behat/screenshots ]" && docker cp $(docker-compose ps -q test):/app/tests/behat/screenshots /tmp/artifacts/behat
          when: always
      - store_artifacts:
          path: /tmp/artifacts

  deploy:
    <<: *container_config
    parallelism: 1
    steps:
      - checkout
#      - setup_remote_docker
      - setup_remote_docker:
          docker_layer_caching: true
          version: 17.06.0-ce
      - run:
          name: Pull newest Docker images
          command: ahoy docker-pull
      - run:
          name: Build and push Docker images to Dockerhub
          command: |
            echo "IMAGE_VERSION_TAG=$CIRCLE_TAG">>.env
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            ahoy docker-push

workflows:
  version: 2
  main:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /^(?:7|8)\.x\-[0-9]+\.[0-9]+(?:[A-z0-9\-])*$/
            branches:
              only: /master|ci|feature\/7\.x\-3\.x\-lagoon/
