---
# Ahoy workflow configuration for GovCMS.

ahoyapi: v2

commands:
  up:
    usage: Build project.
    cmd: docker-compose up -d

  down:
    usage: Delete project.
    cmd: docker-compose down

  build:
    usage: Build project.
    cmd: docker-compose up -d --build

  make:
    usage: Install local dependencies.
    cmd: ahoy drush make --no-core --contrib-destination=profiles/govcms profiles/govcms/drupal-org.make -y

  cli:
    usage: Start a shell inside CLI container.
    cmd: docker-compose exec test bash

  run:
    usage: Run command inside CLI container.
    cmd: docker-compose exec test bash -c "$@"

  drush:
    usage: Run drush commands in the CLI service container.
    cmd: docker-compose exec test drush "$@"

  logs:
    usage: Show Docker logs.
    cmd: docker-compose logs "$@"

  ps:
    usage: List running Docker containers.
    cmd: docker-compose ps

  restart:
    usage: Restart Docker containers.
    cmd: docker-compose restart

  stop:
    usage: Stop Docker containers.
    cmd: docker-compose stop "$@"

  install:
    usage: Install the profile.
    cmd: ahoy drush si -y govcms "$@"

  login:
    usage: Login to a website.
    cmd: ahoy drush uli "$@"

  lint:
    usage: Lint code
    cmd: ahoy run lint-govcms

  test:
    usage: Run all tests.
    cmd: |
      ahoy test-phpunit
      ahoy test-behat

  test-behat:
    usage: Run behat tests.
    # @todo: Refactor to use a script from inside of the container.
    cmd: ahoy run "cd tests/behat && ../../tests/vendor/bin/behat --strict --colors $BEHAT_PROFILE $@"

  test-phpunit:
    usage: Run phpunit tests.
    # @todo: Refactor to use a script from inside of the container.
    cmd: ahoy run "cd tests/phpunit && ../../tests/vendor/bin/phpunit $@"

  pull:
    usage: Pull latest docker images.
    cmd: "docker image ls --format \"{{.Repository}}:{{.Tag}}\" | grep amazeeio/ | grep -v none | xargs -n1 docker pull | cat"

  push:
    usage: Push all docker images.
    cmd: |
      export $(grep -v '^#' .env.default | xargs)
      . .docker/push.sh

  release:
    usage: Push all docker images.
    cmd: |
      export $(grep -v '^#' .env.default | xargs)
      . .docker/release.sh
