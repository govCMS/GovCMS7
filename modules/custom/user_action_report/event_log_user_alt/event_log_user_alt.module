<?php

/**
 * @file
 * Logs user CRUD commands in the event_log module.
 *
 * @codingStandardsIgnoreStart
 *
 * @author Bas van Meurs
 * @copyright Cipix Internet
 *
 * @codingStandardsIgnoreEnd
 */

/**
 * Implements hook_event_log_handlers().
 */
function event_log_user_alt_event_log_handlers() {
  // Node event log handler.
  $handlers = [];
  $handlers['user'] = [
    'title' => t('User'),
    'relationships' => [
      [
        'table' => 'users',
        'field' => 'uid',
        'operations' => NULL,
        'numeric' => TRUE,
      ],
    ],
  ];
  return $handlers;
}

/**
 * Implements hook_user_insert().
 */
function event_log_user_alt_user_insert($account) {
  $account_array = (is_array($account) ? $account : get_object_vars($account));
  $log = [
    'type' => 'user',
    'operation' => 'insert',
    'description' => t('User: @name (uid @uid)', [
      '@name' => $account_array['name'],
      '@uid' => $account_array['uid'],
    ]),
    'ref_numeric' => $account_array['uid'],
  ];
  event_log_insert($log);
}

/**
 * Implements hook_user_update().
 */
function event_log_user_alt_user_update($account) {
  $account_array = (is_array($account) ? $account : get_object_vars($account));
  $log = [
    'type' => 'user',
    'operation' => 'update',
    'description' => t('User: @name (uid @uid)', [
      '@name' => $account_array['original']->name,
      '@uid' => $account_array['original']->uid,
    ]),
    'ref_numeric' => $account_array['original']->uid,
  ];
  event_log_insert($log);
}

/**
 * Implements hook_user_delete().
 */
function event_log_user_alt_user_delete($account) {
  $account_array = (is_array($account) ? $account : get_object_vars($account));
  $log = [
    'type' => 'user',
    'operation' => 'delete',
    'description' => t('User: @name (uid @uid)', [
      '@name' => $account_array['name'],
      '@uid' => $account_array['uid'],
    ]),
    'ref_numeric' => $account_array['uid'],
  ];
  event_log_insert($log);
}
